/*
 * This file is generated by jOOQ.
 */
package com.sithroo.r2dbc.demo.db.generated.tables.records;


import com.sithroo.r2dbc.demo.db.generated.tables.DemoEntry;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DemoEntryRecord extends UpdatableRecordImpl<DemoEntryRecord> implements Record3<Long, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>demo_entry.id</code>.
     */
    public DemoEntryRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>demo_entry.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>demo_entry.entry</code>.
     */
    public DemoEntryRecord setEntry(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>demo_entry.entry</code>.
     */
    public String getEntry() {
        return (String) get(1);
    }

    /**
     * Setter for <code>demo_entry.created</code>.
     */
    public DemoEntryRecord setCreated(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>demo_entry.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DemoEntry.DEMO_ENTRY.ID;
    }

    @Override
    public Field<String> field2() {
        return DemoEntry.DEMO_ENTRY.ENTRY;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return DemoEntry.DEMO_ENTRY.CREATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEntry();
    }

    @Override
    public LocalDateTime component3() {
        return getCreated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEntry();
    }

    @Override
    public LocalDateTime value3() {
        return getCreated();
    }

    @Override
    public DemoEntryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DemoEntryRecord value2(String value) {
        setEntry(value);
        return this;
    }

    @Override
    public DemoEntryRecord value3(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public DemoEntryRecord values(Long value1, String value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DemoEntryRecord
     */
    public DemoEntryRecord() {
        super(DemoEntry.DEMO_ENTRY);
    }

    /**
     * Create a detached, initialised DemoEntryRecord
     */
    public DemoEntryRecord(Long id, String entry, LocalDateTime created) {
        super(DemoEntry.DEMO_ENTRY);

        setId(id);
        setEntry(entry);
        setCreated(created);
    }
}
